node('suse') {

    stage('Clone repository') {
        checkout scm
    }

    stage('Build image') {
        DOCKER_HOME = tool "docker"
        dir("suse"){
        sh "cd base && sudo ./config.sh && cd .."
        sh "mv base/Dockerfile ."
        sh "mv base/sles-15-docker.tar.xz ."
        def app3 = docker.build("vedarth/sles")
        sh "mv Dockerfile base/"
        sh "mv sles-15-docker.tar.xz base/"
        sh "mv django/Dockerfile ."
        def app = docker.build("vedarth/django")
        sh "mv Dockerfile django/"
        sh "mv redis/Dockerfile ."
        def app2 = docker.build("vedarth/redis")
        sh "mv Dockerfile redis/"
        sh "mv golang/Dockerfile ."
        sh "mv golang/go-wrapper ."
        def app4 = docker.build("vedarth/golang")
        sh "mv Dockerfile golang/"
        sh "mv go-wrapper golang/"
        sh "mv jupyter/Dockerfile ."
        def app5 = docker.build("vedarth/jupyter")
        sh "mv Dockerfile jupyter/"
        sh "mv mariadb/allow-skip-name.cnf ."
        sh "mv mariadb/docker-entrypoint.sh ."
        sh "mv mariadb/Dockerfile ."
        sh "mv mariadb/fix-permissions.sh ."
        def app6 = docker.build("vedarth/mariadb")
        sh "mv allow-skip-name.cnf mariadb/"
        sh "mv docker-entrypoint.sh mariadb/"
        sh "mv Dockerfile mariadb/"
        sh "mv fix-permissions.sh mariadb/"
        sh "mv nginx/Dockerfile ."
        def app7 = docker.build("vedarth/nginx")
        sh "mv Dockerfile nginx/"
        sh "mv nodejs/Dockerfile ."
        def app8 = docker.build("vedarth/nodejs")
        sh "mv Dockerfile nodejs/"
        sh "mv postgresql/Dockerfile ."
        sh "mv postgresql/postgresql-setup ."
        sh "mv postgresql/postgresql.conf ."
        sh "mv postgresql/start_postgres.sh ."
        sh "mv postgresql/supervisord.conf ."
        def app9 = docker.build("vedarth/postgresql")
        sh "mv Dockerfile postgresql/"
        sh "mv postgresql-setup postgresql/"
        sh "mv postgresql.conf postgresql/"
        sh "mv start_postgres.sh postgresql/"
        sh "mv supervisord.conf postgresql/"
        sh "mv wordpress/scripts ."
        sh "mv wordpress/Dockerfile ."
        def app10 = docker.build("vedarth/wordpress")
        sh "mv Dockerfile wordpress/"
        sh "mv scripts wordpress/"
        sh "mv cobol/VERSION ."
        sh "mv cobol/Dockerfile ."
        def app11 = docker.build("knrt10/etcd")
        sh "mv VERSION cobol/"
        sh "mv Dockerfile cobol/"
        sh "mv etcd/install.sh ."
        sh "mv etcd/Dockerfile ."
        def app12 = docker.build("knrt10/etcd")
        sh "mv install.sh etcd/"
        sh "mv Dockerfile etcd/"
        }
    }
    stage('Clean') {
        dir("suse"){
            sh "docker rmi vedarth/sles"
            sh "docker rmi vedarth/django"
            sh "docker rmi vedarth/golang"
            sh "docker rmi vedarth/jupyter"
            sh "docker rmi vedarth/mariadb"
            sh "docker rmi vedarth/nginx"
            sh "docker rmi vedarth/nodejs"
            sh "docker rmi vedarth/postgresql"
            sh "docker rmi vedarth/redis"
            sh "docker rmi vedarth/wordpress"
            sh "docker rmi knrt10/cobol"
            sh "docker rmi knrt10/etcd"
            sh "docker system prune -f"
        }
    }
}
